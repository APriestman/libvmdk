.Dd April 18, 2010
.Dt libvmdk 3
.Os libvmdk
.Sh NAME
.Nm libvmdk.h
.Nd Library to support the VMware Virtual Disk (VMDK) format
.Sh LIBRARY
.Lb libvmdk
.Sh SYNOPSIS
.In libvmdk.h
.Pp
Support functions
.Ft const char *
.Fn libvmdk_get_version "void"
.Ft int
.Fn libvmdk_check_file_signature "const char *filename, libvmdk_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libvmdk_check_file_signature_wide "const wchar_t *filename, libvmdk_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libvmdk_check_file_signature_file_io_handle "libbfio_handle_t *bfio_handle, libvmdk_error_t **error"
.Pp
Notify functions
.Ft void
.Fn libvmdk_notify_set_verbose "int verbose"
.Ft int
.Fn libvmdk_notify_set_stream "FILE *stream, libvmdk_error_t **error"
.Ft int
.Fn libvmdk_notify_stream_open "const char *filename, libvmdk_error_t **error"
.Ft int
.Fn libvmdk_notify_stream_close "libvmdk_error_t **error"
.Pp
Error functions
.Ft void 
.Fn libvmdk_error_free "libvmdk_error_t **error"
.Ft int
.Fn libvmdk_error_fprint "libvmdk_error_t *error, FILE *stream"
.Ft int
.Fn libvmdk_error_sprint "libvmdk_error_t *error, char *string, size_t size"
.Ft int 
.Fn libvmdk_error_backtrace_fprint "libvmdk_error_t *error, FILE *stream"
.Ft int
.Fn libvmdk_error_backtrace_sprint "libvmdk_error_t *error, char *string, size_t size"
.Pp
File functions
.Ft int
.Fn libvmdk_handle_initialize "libvmdk_handle_t **file, libvmdk_error_t **error"
.Ft int
.Fn libvmdk_handle_free "libvmdk_handle_t **file, libvmdk_error_t **error"
.Ft int
.Fn libvmdk_handle_open "libvmdk_handle_t *file, const char *filename, int flags, libvmdk_error_t **error"
.Ft int
.Fn libvmdk_handle_close "libvmdk_handle_t *file, libvmdk_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libvmdk_handle_open_wide "libvmdk_handle_t *file, const wchar_t *filename, int flags, libvmdk_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libvmdk_handle_open_file_io_handle "libvmdk_handle_t *file, libbfio_handle_t *file_io_handle, int flags, libvmdk_error_t **error"
.Sh DESCRIPTION
The
.Fn libvmdk_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libvmdk.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh NOTES
libvmdk uses UTF-8 encoded strings except for filenames.

ASCII strings in a VMDK file contain an extended ASCII string using the codepage of the system it was created on. The function
.Ar libvmdk_set_ascii_codepage
 allows to set the required codepage for reading and writing. The default codepage is ASCII and replaces all extended characters to the Unicode replacement character (U+fffd) when reading and the ASCII substitude character (0x1a) when writing.

libvmdk allows to be compiled with wide character support.
To compile libvmdk with wide character support use
.Ar ./configure --enable-wide-character-type=yes
or pass the definition
.Ar HAVE_WIDE_CHARACTER_TYPE
 to the compiler (i.e. in case of Microsoft Visual Studio (MSVS) C++).

To have other code to determine if libvmdk was compiled with wide character support it defines
.Ar LIBVMDK_HAVE_WIDE_CHARACTER_TYPE
 in libvmdk/features.h.

libvmdk allows to be compiled with chained IO support using libbfio.
libvmdk will automatically detect if a compatible version of libbfio is available.

To have other code to determine if libvmdk was compiled with libbfio support it defines
.Ar LIBVMDK_HAVE_BFIO
 in libvmdk/features.h.

.Sh BUGS
Please report bugs of any kind to <forensics@hoffmannbv.nl> or on the project website:
http://libvmdk.sourceforge.net/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2009-2010 Joachim Metz <jbmetz@users.sourceforge.net>.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libvmdk.h include file
